File system, Maximum filename length, Allowable characters in directory entries{{efn |name=note-25 |These are the restrictions imposed by the on-disk directory entry structures themselves. Particular Installable File System drivers may place restrictions of their own on file and directory names; operating systems may also place restrictions of their own  across all filesystems. DOS  Windows  and OS/2 allow only the following characters from the current 8-bit OEM codepage in SFNs: A-Z  0-9  characters ! # $ % & ' ( ) - @ ^ _ ` { } ~  as well as 0x80-0xFF and 0x20 (SPACE). Specifically  lowercase letters a-z  characters " * / : < > ? \ | +   . ; = [ ]  control codes 0x00-0x1F  0x7F and in some cases also 0xE5 are not allowed.) In LFNs  any UCS-2 Unicode except \ / : ? * " &gt; &lt; | and NUL are allowed in file and directory names across all filesystems. Unix-like systems disallow the characters / and NUL in file and directory names across all filesystems.}}, Maximum pathname length, Maximum file size, Maximum volume size{{efn |name=note-4 |For filesystems that have variable allocation unit (block/cluster) sizes  a range of size are given  indicating the maximum volume sizes for the minimum and the maximum possible allocation unit sizes of the filesystem (e.g. 512 bytes and 128 KiB for FAT — which is the cluster size range allowed by the on-disk data structures  although some Installable File System drivers and operating systems do not support cluster sizes larger than 32 KiB).}}, Max number of files
 BeeGFS, 255 bytes, Any byte except NUL{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 16 EiB, 16 EiB, {{dunno}}
 CP/M file system, 8.3, ASCII except for &lt; &gt; .   ; : = ? * [ ], No directory hierarchy (but accessibility of files depends on user areas via USER command since CP/M 2.2), 32 MiB, 512 MiB, {{dunno}}
 IBM SFS, 8.8, {{dunno}}, {{dunno}}, Non-hierarchical[8], data-sort-type="number" data-sort-value="0" {{dunno}}, {{dunno}}
 DECtape, 6.3, A–Z  0–9, DTxN:FILNAM.EXT = 15, 369 280 bytes (577 * 640), 369 920 bytes (578 * 640), {{dunno}}
 Elektronika BK tape format, 16 bytes, {{dunno}}, No directory hierarchy, 64 KiB, Not limited. Approx. 800KB (one side) for 90 min cassette, {{dunno}}
 MicroDOS file system, 14 bytes, {{dunno}}, {{dunno}}, 16 MiB, 32 MiB, {{dunno}}
 Level-D, 6.3, A–Z  0–9, DEVICE:FILNAM.EXT[PROJCT PROGRM] = 7 + 10 + 15 = 32; + 5*7 for SFDs = 67, 34 359 738 368 words (2**35-1); 206 158 430 208 SIXBIT bytes, Approx 12 GB (64 * 178 MB), {{dunno}}
 RT-11, 6.3, A–Z  0–9  $, 0 (no directory hierarchy), 33 554 432 bytes (65536 * 512), 33 554 432 bytes, {{dunno}}
 Version 6 Unix file system (V6FS), 14 bytes, Any byte except NUL and /{{efn |name=note-26 |In these filesystems the directory entries named "." and ".." have special status. Directory entries with these names are not prohibited  and indeed exist as normal directory entries in the on-disk data structures. However  they are mandatory directory entries  with mandatory values  that are automatically created in each directory when it is created; and directories without them are considered corrupt.}}, No limit defined{{efn |name=note-12 |The on-disk structures have no inherent limit. Particular Installable File System drivers and operating systems may impose limits of their own  however. Limited by its Current Directory Structure (CDS)  DOS does not support more than 32 directory levels (except for DR DOS 3.31-6.0) or full pathnames longer than 66 bytes for FAT  or 255 characters for LFNs. Windows NT does not support full pathnames longer than 32 767 bytes for NTFS. Older POSIX APIs which rely on the PATH_MAX constant have a limit of 4 096 bytes on Linux but this can be worked around. Linux itself has no hard path length limits. [9][10]}}, 16 MiB{{efn |name=note-57 |The file size in the inode is 1 8-bit byte followed by 1 16-bit word  for 24 bits. The actual maximum was 8 847 360 bytes  with 7 singly-indirect blocks and 1 doubly-indirect block; PWB/UNIX 1.0's variant had 8 singly-indirect blocks  making the maximum 524 288 bytes or half a MiB.}}, 32 MiB, {{dunno}}
 Disk Operating System (GEC DOS), {{dunno}}, {{dunno}}, {{dunno}}, data-sort-type="number" data-sort-value="0" {{dunno}} at least 131 072 bytes, data-sort-type="number" data-sort-value="0" {{dunno}}, {{dunno}}
 GEC DOS filing system extended, 8 bytes, A–Z  0–9. Period was directory separator, {{dunno}} No limit defined (workaround for OS limit), data-sort-type="number" data-sort-value="0" {{dunno}} at least 131 072 bytes, data-sort-type="number" data-sort-value="0" {{dunno}}, {{dunno}}
 CBM DOS, 16 bytes, Any byte except NUL, 0 (no directory hierarchy), 16 MiB, 16 MiB, {{dunno}}
 Version 7 Unix file system (V7FS), 14 bytes, Any byte except NUL or /{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 1 GiB{{efn |name=note-58 |The actual maximum was 1 082 201 088 bytes  with 10 direct blocks  1 singly-indirect block  1 doubly-indirect block  and 1 triply-indirect block. The 4.0BSD and 4.1BSD versions  and the System V version  used 1 024-byte blocks rather than 512-byte blocks  making the maximum 4 311 812 608 bytes or approximately 4 GiB.}}, 2 TiB, {{dunno}}
 exFAT, 255 UTF-16 characters, {{dunno}}, 32 760 Unicode characters with each path component no more than 255 characters[11], 16 EiB[11], 64 ZiB (276 bytes), {{dunno}}
 FAT (8-bit), 6.3 (binary files) / 9 characters (ASCII files), ASCII (0x00 and 0xFF not allowed in first character), No directory hierarchy, data-sort-type="number" data-sort-value="0" {{dunno}}, data-sort-type="number" data-sort-value="0" {{dunno}}, {{dunno}}
 FAT12/FAT16, 8.3 (255 UCS-2 characters with LFN){{efn |name=note-24 |Depends on whether the FAT12  FAT16  and FAT32 implementation has support for LFNs. Where it does not  as in OS/2  DOS  Windows 95  Windows 98 in DOS-only mode and the Linux "msdos" driver  file names are limited to 8.3 format of 8-bit OEM characters (space padded in both the basename and extension parts) and may not contain NUL (end-of-directory marker) or character 5 (replacement for character 229 which itself is used as deleted-file marker). Short names also must not contain lowercase letters. A few special device names (CON  NUL  AUX  PRN  LPT1  COM1  etc.) should be avoided  as some operating systems (notably DOS  OS/2 and Windows) reserve them.}}, {{efn |name=note-25}}{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 32 MiB (4 GiB){{efn |name="note-fsize"|On-disk structures would support up to 4 GiB  but practical file size is limited by volume size.}}, 1 MiB to 32 MiB, {{dunno}}
 FAT16B/FAT16X, 8.3 (255 UCS-2 characters with LFN){{efn |name=note-24}}, {{efn |name=note-25}}{{efn |name=note-24}}{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 2 (4) GiB{{efn |name="note-fsize"}}, 16 MiB to 2 (4) GiB, {{dunno}}
 FAT32/FAT32X, 8.3 (255 UCS-2 characters with LFN){{efn |name=note-24}}, {{efn |name=note-25}}{{efn |name=note-24}}{{efn |name=note-26}}, 32 760 Unicode characters with each path component no more than 255 characters[11], 4 GiB[11], 512 MiB to 16 TiB{{efn |While FAT32 partitions this large work fine once created  some software won't allow creation of FAT32 partitions larger than 32 GiB. This includes  notoriously  the Windows XP installation program and the Disk Management console in Windows 2000  XP  2003 and Vista. Use FDISK from a Windows ME Emergency Boot Disk to avoid.[12]}}, {{dunno}}
 FATX, 42 bytes{{efn |name=note-24}}, ASCII. Unicode not permitted., No limit defined{{efn |name=note-12}}, 2 GiB, 16 MiB to 2 GiB, {{dunno}}
 Fossil, {{dunno}}, {{dunno}}, {{dunno}}, data-sort-type="number" data-sort-value="0" {{dunno}}, data-sort-type="number" data-sort-value="0" {{dunno}}, {{dunno}}
 GEMDOS, 8.3, [ ] ( ) _[13], {{dunno}}, {{dunno}}, {{dunno}}, {{dunno}}
 APFS, 255 UTF-8 characters, Unicode 9.0 encoded in UTF-8 [14], {{dunno}}, 8 EiB, data-sort-type="number" data-sort-value="0" {{dunno}}, 263 [15]
 F2FS, 255 bytes, Any byte except NUL  /{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 3.94 TiB, 16 TiB, {{dunno}}
 MFS, 255 bytes, Any byte except :, No path (flat filesystem), 256 MiB, 256 MiB, {{dunno}}
 HFS, 31 bytes, Any byte except :, Unlimited, 2 GiB, 2 TiB, {{dunno}}
 HPFS, 255 bytes, Any byte except NUL{{efn |name=note-27 |The "." and ".." directory entries in HPFS that are seen by applications programs are a partial fiction created by the Installable File System drivers. The on-disk data structure for a directory does not contain entries by those names  but instead contains a special "start" entry. Whilst on-disk directory entries by those names are not physically prohibited  they cannot be created in normal operation  and a directory containing such entries is corrupt.}}, No limit defined{{efn |name=note-12}}, 2 GiB, 2 TiB{{efn |name=note-13 |This is the limit of the on-disk structures. The HPFS Installable File System driver for OS/2 uses the top 5 bits of the volume sector number for its own use  limiting the volume size that it can handle to 64 GiB.}}, {{dunno}}
 NTFS, 255 characters, In Win32 namespace: any UTF-16 code unit (case-insensitive) except /\:*"?<>| as well as NUL In POSIX namespace: any UTF-16 code unit (case-sensitive) except / as well as NUL[16], 32 767 Unicode characters with each path component (directory or filename) up to 255 characters long{{efn |name=note-12}}, 16 EiB{{efn |name=note-55 |This is the limit of the on-disk structures. The NTFS driver for Windows NT limits the volume size that it can handle to 256 TiB and the file size to 16 TiB respectively; in Windows 10 version 1709  the limit is 8 PiB when using 2 MiB cluster size.}}, 16 EiB{{efn |name=note-55}}, 232
 ReFS, 255 UTF-16 characters[17], Any Unicode except NUL  /[17], 32 767 Unicode characters with each path component (directory or filename) up to 255 characters long[17], 16 EiB[17][18], 1 YiB[17], {{dunno}}
 HFS Plus, 255 UTF-16 characters{{efn |name=note-1 |The "classic" Mac OS provides two sets of functions to retrieve file names from an HFS Plus volume  one of them returning the full Unicode names  the other shortened names fitting in the older 31 byte limit to accommodate older applications.}}, Any valid Unicode{{efn |name=note-26}}{{efn |name=note-2 |HFS Plus mandates support for an escape sequence to allow arbitrary Unicode. Users of older software might see the escape sequences instead of the desired characters.}}, Unlimited, slightly less than 8 EiB, slightly less than 8 EiB[19][20], {{dunno}}
 FFS, 255 bytes, Any byte except NUL{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 4 GiB, 256 TiB, {{dunno}}
 HAMMER, 255 bytes[21], Any byte except NUL{{efn |name=note-26}}, {{dunno}}, data-sort-type="number" data-sort-value="0" {{dunno}}, 1 EiB[22], {{dunno}}
 UFS1, 255 bytes, Any byte except NUL{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 16 GiB to 256 TiB, 16 EiB, Subdirectory per directory is 32 767[23]
 UFS2, 255 bytes, Any byte except NUL{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 512 GiB to 32 PiB, 512 ZiB[24] (279 bytes), Subdirectory per directory is 32 767[23]
 ext, 255 bytes, Any byte except NUL{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 2 GiB, 2 GiB, {{dunno}}
 Xiafs, 248 bytes, Any byte except NUL{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 64 MiB, 2 GiB, {{dunno}}
 ext2, 255 bytes, Any byte except NUL  /{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 16 GiB to 2 TiB{{efn |name=note-4}}, 2 TiB to 32 TiB, {{dunno}}
 ext3, 255 bytes, Any byte except NUL  /{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 16 GiB to 2 TiB{{efn |name=note-4}}, 2 TiB to 32 TiB, {{dunno}}
 ext4, 255 bytes[25], Any byte except NUL  /{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 16 GiB to 16 TiB{{efn |name=note-4}}[26], 1 EiB, 232
 NOVA, 255 bytes, Any byte except NUL  /{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 16 EiB, 16 EiB, {{dunno}}
 Lustre, 255 bytes, Any byte except NUL{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 16 EiB on ZFS, 16 EiB, {{dunno}}
 GPFS, 255 UTF-8 codepoints, Any byte except NUL{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, No limit found, 299 bytes (2 PiB tested), {{dunno}}
 GFS, 255 bytes, Any byte except NUL{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 2 TiB to 8 EiB{{efn |name=note-63 |Depends on kernel version and arch. For 2.4 kernels the max is 2 TiB. For 32-bit 2.6 kernels it is 16 TiB. For 64-bit 2.6 kernels it is 8 EiB.}}, 2 TiB to 8 EiB{{efn |name=note-63}}, {{dunno}}
 NILFS, 255 bytes, Any byte except NUL{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 8 EiB, 8 EiB, {{dunno}}
 ReiserFS, 4 032 bytes/255 characters, Any byte except NUL or '/'{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 8 TiB{{efn |ReiserFS has a theoretical maximum file size of 1 EiB  but "page cache limits this to 8 Ti on architectures with 32 bit int"[27]}} (v3.6)  4 GiB (v3.5), 16 TiB, {{dunno}}
 Reiser4, 3 976 bytes, Any byte except / and NUL, No limit defined{{efn |name=note-12}}, 8 TiB on x86, data-sort-type="number" data-sort-value="0" {{dunno}}, {{dunno}}
 OCFS, 255 bytes, Any byte except NUL{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 8 TiB, 8 TiB, {{dunno}}
 OCFS2, 255 bytes, Any byte except NUL{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 4 PiB, 4 PiB, {{dunno}}
 XFS, 255 bytes{{efn |Note that the filename can be much longer XFS#Extended attributes}}, Any byte except NUL{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 8 EiB{{efn |name=note-9 |XFS has a limitation under Linux 2.4 of 64 TiB file size  but Linux 2.4 only supports a maximum block size of 2 TiB. This limitation is not present under IRIX.}}, 8 EiB{{efn |name=note-9}}, {{dunno}}
 JFS1, 255 bytes, Any byte except NUL{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 8 EiB, 512 TiB to 4 PiB, {{dunno}}
 JFS, 255 bytes, Any Unicode except NUL, No limit defined{{efn |name=note-12}}, 4 PiB, 32 PiB, {{dunno}}
 QFS, 255 bytes, Any byte except NUL{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 16 EiB{{efn |name=note-72 |QFS allows files to exceed the size of disk when used with its integrated HSM  as only part of the file need reside on disk at any one time.}}, 4 PiB{{efn |name=note-72}}, {{dunno}}
 BFS, 255 bytes, Any byte except NUL{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 12 288 bytes to 260 GiB{{efn |name=note-3 |Varies wildly according to block size and fragmentation of block allocation groups.}}, 256 PiB to 2 EiB, {{dunno}}
 AdvFS, 255 characters, Any byte except NUL{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 16 TiB, 16 TiB, {{dunno}}
 NSS, 256 characters, Depends on namespace used{{efn |name=note-28 |NSS allows files to have multiple names  in separate namespaces.}}, Only limited by client, 8 TiB, 8 TiB, {{dunno}}
 NWFS, 80 bytes{{efn |name=note-52 |Some namespaces had lower name length limits. "LONG" had an 80-byte limit  "NWFS" 80 bytes  "NFS" 40 bytes and "DOS" imposed 8.3 filename.}}, Depends on namespace used{{efn |name=note-28}}, No limit defined{{efn |name=note-12}}, 4 GiB, 1 TiB, {{dunno}}
 ODS-5, 236 bytes{{efn |name=note-15 |Maximum combined filename/filetype length is 236 bytes; each component has an individual maximum length of 255 bytes.}}, {{dunno}}, 4 096 bytes{{efn |name=note-16 |Maximum pathname length is 4 096 bytes  but quoted limits on individual components add up to 1 664 bytes.}}, 1 TiB, 1 TiB, {{dunno}}
 VxFS, 255 bytes, Any byte except NUL{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 16 EiB, data-sort-type="number" data-sort-value="0" {{dunno}}, {{dunno}}
 UDF, 255 bytes, Any Unicode except NUL, 1 023 bytes{{efn |name=note-43 |This restriction might be lifted in newer versions.}}, 16 EiB, 512 MiB to 16 TiB, {{dunno}}
 ZFS, 255 bytes, Any Unicode except NUL, No limit defined{{efn |name=note-12}}, 16 EiB, 256 ZiB (278 bytes), 2128
 Btrfs, 255 bytes, Any byte except '/' and NUL, No limit defined, 16 EiB, 16 EiB, 264
 Minix V1 FS, 14 or 30 bytes  set at filesystem creation time, Any byte except NUL{{efn |name=note-26}}, No limit defined{{efn |name=note-12}}, 256.5 MiB {{efn |name=note-file-size-vs-filesystem-size |Sparse 
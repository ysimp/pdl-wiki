File system, Hard links, Symbolic links, Block journaling, Metadata-only journaling, Case-sensitive, Case-preserving, File Change Log, Internal snapshotting / branching, XIP, Filesystem-level encryption, Data deduplication, Data checksums
 DECtape, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}
 BeeGFS, {{yes}}, {{yes}}, {{yes}}, {{yes}}, {{yes}}, {{yes}}, {{no}}, {{no}}, {{no}}, {{no}}, {{yes}}, {{no}}
 Level-D, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}
 RT-11, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}
 APFS, {{yes}}, {{yes}}, {{dunno}}, {{dunno}}, {{partial}}, {{yes}}, {{dunno}}, {{yes}}, {{dunno}}, {{yes}}, {{partial}}, {{no}}
 Version 6 Unix file system (V6FS), {{yes}}, {{no}}, {{no}}, {{no}}, {{yes}}, {{yes}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}
 Version 7 Unix file system (V7FS), {{yes}}, {{no}}{{efn |name=note-59 |System V Release 4  and some other Unix systems  retrofitted symbolic links to their versions of the Version 7 Unix file system  although the original version didn't support them.}}, {{no}}, {{no}}, {{yes}}, {{yes}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}
 exFAT, {{no}}, {{no}}, {{no}}, {{partial}} (with TexFAT only), {{no}}, {{yes}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}
 FAT12, {{no}}, {{no}}, {{no}}, {{partial}} (with TFAT12 only), {{no}}, {{partial}} (with VFAT LFNs only), {{no}}, {{no}}, {{no}}, {{partial}} (DR-DOS with SECURITY only), {{no}}, {{no}}
 FAT16 / FAT16B / FAT16X, {{no}}, {{no}}, {{no}}, {{partial}} (with TFAT16 only), {{no}}, {{partial}} (with VFAT LFNs only), {{no}}, {{no}}, {{no}}, {{partial}} (DR-DOS with SECURITY only), {{no}}, {{no}}
 FAT32 / FAT32X, {{no}}, {{no}}, {{no}}?, {{partial}} (with TFAT32 only), {{no}}, {{partial}} (with VFAT LFNs only), {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}
 GFS, {{yes}}, {{yes}}{{efn |Context based symlinks were supported in GFS  GFS2 only supports standard symlinks since the bind mount feature of the Linux VFS has made context based symlinks obsolete}}, {{yes}}, {{yes}}{{efn |Optional journaling of data}}, {{yes}}, {{yes}}, {{no}}, {{no}}, {{no}}, {{no}}, {{dunno}}, {{no}}
 HPFS, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{yes}}, {{no}}, {{dunno}}, {{no}}, {{no}}, {{dunno}}, {{no}}
 NTFS, {{yes}}, {{yes}}{{efn |As of Windows Vista  NTFS fully supports symbolic links.[35] NTFS 3.0 (Windows 2000) and higher can create junctions  which allow entire directories (but not individual files) to be mapped to elsewhere in the directory tree of the same partition (file system). These are implemented through reparse points  which allow the normal process of filename resolution to be extended in a flexible manner.}}, {{no}}{{efn |name=note-37 |NTFS stores everything  even the file data  as meta-data  so its log is closer to block journaling.}}, {{yes}}{{efn |name=note-37}} (2000), {{yes}}{{efn |name=note-36 |While NTFS itself supports case sensitivity  the Win32 environment subsystem cannot create files whose names differ only by case for compatibility reasons. When a file is opened for writing  if there is any existing file whose name is a case-insensitive match for the new file  the existing file is truncated and opened for writing instead of a new file with a different name being created. Other subsystems like e. g. Services for Unix  that operate directly above the kernel and not on top of Win32 can have case-sensitivity.}}, {{yes}}, {{yes}}, {{partial}}{{efn |name=note-93 |NTFS does not internally support snapshots  but in conjunction with the Volume Shadow Copy Service can maintain persistent block differential volume snapshots.}}, {{dunno}}, {{yes}}, {{yes}}{{efn |name=note-NTFS-Dedup |Supported only on Windows Server SKUs. However  partitions deduplicated on Server can be used on Client.}}[36], {{no}}
 HFS Plus, {{yes}}[37], {{yes}}, {{no}}, {{yes}}{{efn |name=note-48 |Metadata-only journaling was introduced in the Mac OS X 10.2.2 HFS Plus driver; journaling is enabled by default on Mac OS X 10.3 and later.}}, {{partial}}{{efn |Although often believed to be case sensitive  HFS Plus normally is not. The typical default installation is case-preserving only. From Mac OS X 10.3 on the command newfs_hfs -s will create a case-sensitive new file system.[38] HFS Plus version 5 optionally supports case-sensitivity. However  since case-sensitivity is fundamentally different from case-insensitivity  a new signature was required so existing HFS Plus utilities would not see case-sensitivity as a file system error that needed to be corrected. Since the new signature is 'HX'  it is often believed this is a new filesystem instead of a simply an upgraded version of HFS Plus.[39][40]}}, {{yes}}, {{yes}}{{efn |Mac OS X Tiger (10.4) and late versions of Panther (10.3) provide file change logging (it's a feature of the file system software  not of the volume format  actually).[41]}}, {{no}}, {{no}}, {{no}}{{efn |name=note-77 |HFS+ does not actually encrypt files: to implement FileVault  OS X creates an HFS+ filesystem in a sparse  encrypted disk image that is automatically mounted over the home directory when the user logs in.}}, {{no}}, {{no}}
 FFS, {{yes}}, {{yes}}, {{no}}, {{no}}, {{yes}}, {{yes}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}
 UFS1, {{yes}}, {{yes}}, {{no}}, {{no}}, {{yes}}, {{yes}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}
 UFS2, {{yes}}, {{yes}}, {{no}}, {{yes}}{{efn |name=note-66 |"Soft dependencies" (softdep) in NetBSD  called "soft updates" in FreeBSD provide meta-data consistency at all times without double writes (journaling)}} [42] {{efn|Journaled Soft Updates (SU+J) are the default as of FreeBSD 9.x-RELEASE [43][44]}}, {{yes}}, {{yes}}, {{no}}, {{yes}}, {{dunno}}, {{no}}, {{no}}, {{no}}
 HAMMER, {{yes}}, {{yes}}, {{yes}}, {{yes}}, {{yes}}, {{yes}}, {{dunno}}, {{yes}}, {{no}}, {{no}}, {{yes}}, {{yes}}
 LFS, {{yes}}, {{yes}}, {{yes}}{{efn |name=note-38 |UDF  LFS  and NILFS are log-structured file systems and behave as if the entire file system were a journal.}}, {{no}}, {{yes}}, {{yes}}, {{no}}, {{yes}}, {{no}}, {{no}}, {{no}}, {{no}}
 ext, {{yes}}, {{yes}}, {{no}}, {{no}}, {{yes}}, {{yes}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}
 Xiafs, {{yes}}, {{yes}}, {{no}}, {{no}}, {{yes}}, {{yes}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}
 ext2, {{yes}}, {{yes}}, {{no}}, {{no}}, {{yes}}, {{yes}}, {{no}}, {{no}}, {{yes}}{{efn |name=note-65 |Linux kernel versions 2.6.12 and newer.}}, {{no}}, {{no}}, {{no}}
 ext3, {{yes}}, {{yes}}, {{yes}} (2001) {{efn |name=note-62 |Off by default.}}, {{yes}} (2001), {{yes}}, {{yes}}, {{no}}, {{no}}, {{yes}}, {{no}}, {{no}}, {{no}}
 ext4, {{yes}}, {{yes}}, {{yes}}{{efn |name=note-62}}, {{yes}}, {{yes}}  optional [45], {{yes}}, {{no}}, {{no}}, {{yes}}, {{yes}}  experimental [46], {{no}}, {{no}}
 NOVA, {{yes}}, {{yes}}, {{no}}, {{yes}}, {{yes}}, {{yes}}, {{no}}, {{yes}}, {{yes}}, {{no}}, {{no}}, {{yes}}
 F2FS, {{yes}}, {{yes}}, {{yes}}{{efn |name=note-38}}, {{no}}, {{yes}}, {{yes}}, {{no}}, {{no}}, {{no}}, {{yes}}  experimental [47], {{no}}, {{no}}
 Lustre, {{yes}}, {{yes}}, {{yes}}{{efn |name=note-62}}, {{yes}}, {{yes}}, {{yes}}, {{yes}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}
 NILFS, {{yes}}, {{yes}}, {{yes}}{{efn |name=note-38}}, {{no}}, {{yes}}, {{yes}}, {{no}}, {{yes}}, {{no}}, {{no}}, {{no}}, {{yes}}
 ReiserFS, {{yes}}, {{yes}}, {{yes}}{{efn |name=note-44 |Full block journaling for ReiserFS was added to Linux 2.6.8.}}, {{yes}}, {{yes}}, {{yes}}, {{no}}, {{no}}, {{dunno}}, {{no}}, {{no}}, {{no}}
 Reiser4, {{yes}}, {{yes}}, {{yes}}, {{no}}, {{yes}}, {{yes}}, {{no}}, {{dunno}}, {{dunno}}, {{yes}}{{efn |name=note-50 |Reiser4 supports transparent compression and encryption with the cryptcompress plugin which is the default file handler in version 4.1.}}, {{dunno}}, {{no}}
 OCFS, {{no}}, {{yes}}, {{no}}, {{no}}, {{yes}}, {{yes}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}
 OCFS2, {{yes}}, {{yes}}, {{yes}}, {{yes}}, {{yes}}, {{yes}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}, {{no}}
 XFS, {{yes}}, {{yes}}, {{yes}}, {{yes}}, {{yes}}{{efn |n
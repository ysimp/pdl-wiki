Format, Languages
 std.string.join(array_of_strings  separator), D
 string:join(list_of_strings  separator), Erlang
 join(separator  list_of_strings), Perl 5  Perl 6  PHP
 implode(separator  array_of_strings), PHP
 separator.join(sequence_of_strings), Python  Swift 1.x
 array_of_strings.join(separator), Ruby  JavaScript  Perl 6
 (string-join array_of_strings separator), Scheme (SRFI 13)
 (format nil "~{~a~^separator~}" array_of_strings), Common Lisp
 (clojure.string/join separator list_of_strings) (apply str (interpose separator list_of_strings)), Clojure
 strings.Join(array_of_strings  separator), Go
 join(array_of_strings  separator), Seed7
 String.concat separator list_of_strings, OCaml
 String.concatWith separator list_of_strings, Standard ML
 Data.List.intercalate separator list_of_strings, Haskell (GHC 6.8+)
 Join(array_of_strings  separator), VB
 String.Join(separator  array_of_strings), VB .NET  C#  F#
 String.join(separator  array_of_strings), Java 8+
 &{$OFS=$separator; "$array_of_strings"}  or array_of_strings -join separator, Windows PowerShell
 [array_of_strings componentsJoinedByString:separator], Objective-C (NSString * only)
 table.concat(table_of_strings  separator), Lua
 "); // {"abc"  "defgh"  "ijk"} { Example in Pascal }
var
  lStrings: TStringList;
  lStr: string;
begin
  lStrings := TStringList.Create;
  lStrings.Delimiter := ' ';
  lStrings.DelimitedText := 'abc defgh ijk';
  lStr := lStrings.Strings[0]; // 'abc'
  lStr := lStrings.Strings[1]; // 'defgh'
  lStr := lStrings.Strings[2]; // 'ijk'
end;
 # Examples in Perl 5
split(/spam/  'Spam eggs spam spam and ham'); # ('Spam eggs '  ' '  ' and ham')
split(/X/  'Spam eggs spam spam and ham');    # ('Spam eggs spam spam and ham')
 # Examples in Perl 6
'Spam eggs spam spam and ham'.split(/spam/);  # (Spam eggs     and ham)
split(/X/  'Spam eggs spam spam and ham');    # (Spam eggs spam spam and ham)
 sprintf see #Format strip see #trim strcmp see #Compare (integer result) substring {{hatnote|See CharAt for base of startpos/endpos.}} Definition substring(string  startpos  endpos) returns string substr(string  startpos  numChars) returns string Description Returns a substring of string between starting at startpos and endpos  or starting at startpos of length numChars. The resulting string is truncated if there are fewer than numChars characters beyond the starting point. endpos represents the index after the last character in the substring. Note that for variable-length encodings such as UTF-8  UTF-16 or Shift-JIS  it can be necessary to remove string positions at the end  in order to avoid invalid strings. Format Languages string[startpos:endpos] ALGOL 68 (changes base index) string (startpos .. endpos) Ada (changes base index) Mid(string  startpos  numChars) VB mid(string  startpos  numChars) FreeBASIC string[startpos+(?numChars)-~?IO] APL MID$(string  startpos  numChars) BASIC substr(string  startpos  numChars) AWK (changes string)  Perl 5 [14][15] PHP[14][15] substr(string  startpos  numChars) string.substr(startpos  numChars) Perl 6[16][17] substr(string  startpos « numChars  padChar») Rexx string[startpos:endpos] Cobra  Python [14][18] Go string[startpos  numChars] Pick Basic string[startpos  numChars] string[startpos .. endpos-1] string[startpos ... endpos] Ruby[14][18] string[startpos .. endpos] string[startpos len numChars] Seed7 string.slice(startpos«  endpos») JavaScript[14][18] string.substr(startpos«  numChars») C++ (STL)  JavaScript string.Substring(startpos  numChars) VB .NET  C#  Windows PowerShell  F# string.substring(startpos«  endpos») Java  JavaScript copy(string  startpos  numChars) Object Pascal (Delphi) (substring string startpos endpos) Scheme (subseq string startpos endpos) Common Lisp (subseq string startpos endpos) ISLISP String.sub string startpos numChars OCaml substring (string  startpos  numChars) Standard ML string:sub_string(string  startpos  endpos) string:substr(string  startpos  numChars) Erlang strncpy(result  string + startpos  numChars); C string[startpos .. endpos+1] D take numChars $ drop startpos string Haskell [string substringWithRange:NSMakeRange(startpos  numChars)] Objective-C (NSString * only) string.[startpos..endpos] F# string.sub(string  startpos  endpos) (string):sub(startpos  endpos) Lua[14][18] string copyFrom: startpos to: endpos Smalltalk string(startpos:endpos) Fortran SUBSTRING(string FROM startpos «FOR numChars») SQL StringTake[string  {startpos  endpos}] Mathematica[14][18] string[startpos .. endpos] Ya string (startpos:numChars) string range string startpos endpos Tcl // Examples in C#
"abc".Substring(1  1):      // returns "b"
"abc".Substring(1  2);      // returns "bc"
"abc".Substring(1  6);      // error
 ;; Examples in Common Lisp
(subseq "abc" 1 2)          ; returns "b"
(subseq "abc" 2)            ; returns "c"
 % Examples in Erlang
string:substr("abc"  2  1). %  returns "b"
string:substr("abc"  2).    %  returns "bc"
 # Examples in Perl 5
substr("abc"  1  1);       #  returns "b"
substr("abc"  1);          #  returns "bc"
 # Examples in Perl 6
"abc".substr(1  1);        #  returns "b"
"abc".substr(1);           #  returns "bc"
 # Examples in Python
"abc"[1:2]                 #  returns "b"
"abc"[1:3]                 #  returns "bc"
 /* Examples in Rexx */
substr("abc"  2  1)         /* returns "b"      */
substr("abc"  2)            /* returns "bc"     */
substr("abc"  2  6)         /* returns "bc    " */
substr("abc"  2  6  "*")    /* returns "bc****" */
 Uppercase Definition uppercase(string) returns string Description Returns the string in upper case. Format Languages UCase(string) VB ucase(string) FreeBASIC toupper(string) AWK (changes string) uc(string) Perl 5 / Perl 6 string.uc Perl 6 toupper(char) C (operates on one character) for(size_t i = 0  len = strlen(string); i< len; i++) string[i] = toupper(string[i]); for (char *c = string; *c != '\0'; c++) *c = toupper(*c); C (string / char array) std.string.toUpper(string) D transform(string.begin()  string.end()  result.begin()  toupper)[19] C++[20] uppercase(string) Object Pascal (Delphi) upcase(char) Object Pascal (Delphi) (operates on one character) strtoupper(string) PHP upper(string) Seed7 tr 'a-z' 'A-Z' Unix translate(string)  or UPPER variables  or PARSE UPPER VAR SrcVar DstVar Rexx string.upper() Python upcase(string) Pick Basic string.upcase Ruby [21] strings.ToUpper(string) Go (string-upcase string) Scheme  Common Lisp String.uppercase string OCaml String.map Char.toUpper string Standard ML map Char.toUpper string Haskell string.toUpperCase() Java  JavaScript to_upper(string) Erlang string.ToUpper() VB .NET  C#  Windows PowerShell  F# string.uppercaseString Objective-C (NSString * only)  Swift (Foundation) string.upper(string) (string):upper() Lua string asUppercase Smalltalk UPPER(string) SQL ToUpperCase[string] Mathematica «FUNCTION» UPPER-CASE(string) COBOL string.toUpper Cobra string toupper string Tcl // Example in C#
"Wiki means fast?".ToUpper();      // "WIKI MEANS FAST?" 
 # Example in Perl 5
uc("Wiki means fast?");             # "WIKI MEANS FAST?" 
 # Example in Perl 6
uc("Wiki means fast?");             # "WIKI MEANS FAST?"
"Wiki means fast?".uc;              # "WIKI MEANS FAST?"  
 /* Example in Rexx */
translate("Wiki means fast?")      /* "WIKI MEANS FAST?" */

/* Example #2 */
A='This is an example.'
UPPER A                            /* "THIS IS AN EXAMPLE." */

/* Example #3 */
A='upper using Translate Function.'
Translate UPPER VAR A Z            /* Z="UPPER USING TRANSLATE FUNCTION." */
 ; Example in Scheme
(use-modules (srfi srfi-13))
(string-upcase "Wiki means fast?") ;  "WIKI MEANS FAST?"
 ' Example in Visual Basic
UCase("Wiki means fast?")          '  "WIKI MEANS FAST?" 
 trim {{main|Trim (programming)}} trim or strip is used to remove whitespace from the beginning  end  or both beginning and end  of a string. Example usage Languages String.Trim([chars]) C#  VB.NET  Windows PowerShell string.strip(); D (.trim string) Clojure sequence [ predicate? ] trim Factor (string-trim '(#\Space #\Tab #\Newline) string) Common Lisp (string-trim string) Scheme string.trim() Java  JavaScript (1.8.1+  Firefox 3.5+) Trim(String) Pascal [22] QBasic  Visual Basic  Delphi string.strip() Python strings.Trim(string  chars) Go LTRIM(RTRIM(String)) Oracle SQL  T-SQL strip(string [ option  char]) REXX string:strip(string [ option  char]) Erlang string.strip or string.lstrip or string.rstrip Ruby string =~ s/^\s+//r =~ s/\s+$//r Perl 5 string.trim Perl 6 trim(string) PHP  Perl 6 [string stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]] Objective-C using Cocoa string withBlanksTrimmed string withoutSpaces string withoutSeparators Smalltalk (Squeak  Pharo) Smalltalk strip(string) SAS string trim $string Tcl TRIM(string) or TRIM(ADJUSTL(string)) Fortran TRIM(string) SQL TRIM(string) or LTrim(string) or RTrim(String) ColdFusion String.trim string OCaml 4+ Other languages In languages without a built-in trim function  it is usually simple to create a custom function which accomplishes the same task. AWK In AWK  one can use regular expressions to trim:  ltrim(v) = gsub(/^[ \t]+/  ""  v)
 rtrim(v) = gsub(/[ \t]+$/  ""  v)
 trim(v)  = ltrim(v); rtrim(v)
 or:  function ltrim(s) { sub(/^[ \t]+/  ""  s); return s }
 function rtrim(s) { sub(/[ \t]+$/  ""  s); return s }
 function trim(s)  { return rtrim(ltrim(s)); }
 C/C++ There is no standard trim function in C or C++. Most of the available string libraries[23] for C contain code which implements trimming  or functions that significantly ease an efficient implementation. The function has also often been called EatWhitespace in some non-standard C libraries. In C  programmers often combine a ltrim and rtrim to implement trim: #include <string.h>
#include <ctype.h>

void rtrim(char *str)
{
  char *s;
  s = str + strlen(str);
  while (--s >= str) {
    if (!isspace(*s)) break;
    *s = 0;
  }
}

void ltrim(char *str)
{
  size_t n;
  n = 0;
  while (str[n] != '\0' && isspace((unsigned char)str[n])) {
    n++;
  }
  memmove(str  str + n  strlen(str) - n + 1);
}

void trim(char *str)
{
  rtrim(str);
  ltrim(str);
}
 The open source C++ library Boost has several trim variants  including a standard one:[24] #include <boost/algorithm/string/trim.hpp>
trimmed = boost::algorithm::trim_copy("string");
 Note that with boost's function named simply trim the input sequence is modified in-place  and does not return a result. Another open source C++ library Qt has several trim variants  including a standard one:[25] #include <QString>
trimmed = s.trimmed();
 The Linux kernel also includes a strip function  strstrip()  since 2.6.18-rc1  which trims the string "in place". Since 2.6.33-rc1  the kernel uses strim() instead of strstrip() to avoid false warnings.[26] Haskell A trim algorithm in Haskell:  import Data.Char (isSpace)
 trim      :: String -> String
 trim      = f . f
    where f = reverse . dropWhile isSpace
 may be interpreted as follows: f drops the preceding whitespace  and reverses the string. f is then again applied to its own output. Note that the type signature (the second line) is optional. J The trim algorithm in J is a functional description:      trim =. #~ [: (+./\ *. +./\.) ' '&~:
 That is: filter (#~) for non-space characters (' '&~:) between leading (+./\) and (*.) trailing (+./\.) spaces. JavaScript There is a built-in trim function in JavaScript 1.8.1 (Firefox 3.5 and later)  and the ECMAScript 5 standard. In earlier versions it can be added to the String object's prototype as follows: String.prototype.trim = function() {
  return this.replace(/^\s+/g  "").replace(/\s+$/g  "");
};
 Perl Perl 5 has no built-in trim function. However  the functionality is commonly achieved using regular expressions. Example: <syntaxhighlight lang="perl">
 $string =~ s/^\s+//; # remove leading whitespace $string =~ s/\s+$//; # remove trailing whitespace </syntaxhighlight>
 or: <syntaxhighlight lang="perl">
 $string =~ s/^\s+|\s+$//g ; # remove both leading and trailing whitespace </syntaxhighlight>
 These examples modify the value of the original variable $string. Also available for Perl is StripLTSpace in String::Strip from CPAN. There are  however  two functions that are commonly used to strip whitespace from the end of strings  chomp and chop: chop removes the last character from a string and returns it. chomp removes the trailing newline character(s) from a string if present. (What constitutes a newline is $INPUT_RECORD_SEPARATOR dependent). In Perl 6  the upcoming major revision of the language  strings have a trim method. Example: <syntaxhighlight lang="perl">
 $string = $string.trim; # remove leading and trailing whitespace $string .= trim; # same thing </syntaxhighlight>
 Tcl The Tcl string command has three relevant subcommands: trim  trimright and trimleft. For each of those commands  an additional argument may be specified: a string that represents a set of characters to removethe default is whitespace (space  tab  newline  carriage return). Example of trimming vowels: set string onomatopoeia
set trimmed [string trim $string aeiou]         ;# result is nomatop
set r_trimmed [string trimright $string aeiou]  ;# result is onomatop
set l_trimmed [string trimleft $string aeiou]   ;# result is nomatopoeia
 XSLT XSLT includes the function normalize-space(string) which strips leading and trailing whitespace  in addition to replacing any whitespace sequence (including line breaks) with a single space. Example: <xsl:variable name='trimmed'>
   <xsl:value-of select='normalize-space(string)'/>
</xsl:variable>
 XSLT 2.0 includes regular expressions  providing another mechanism to perform string trimming. Another XSLT technique for trimming is to utilize the XPath 2.0 substring() function. References {{Reflist|refs= [1] [2] [14] [18] [15] [16] [17] }} External links {{External links|date=August 2013}} Perl String Functions Python 2 String Methods Python 3 String Methods Scheme String Procedures Erlang String Functions .NET String Methods and Properties Ruby String Class PHP String functions {{javadoc:SE|java/lang|String|package=java.lang}} members Haskell Hierarchical Libraries Arrays in D (in D strings are regular arrays) std.string from Phobos (D standard library) Lua String Functions OCaml String module Common Lisp String manipulation FreeBASIC String Functions Reference.wolfram.com Tcl reference for string commands, Definition, substring(string  startpos  endpos) returns string substr(string  startpos  numChars) returns string, Description, Returns a substring of string between starting at startpos and endpos  or starting at startpos of length numChars. The resulting string is truncated if there are fewer than numChars characters beyond the starting point. endpos represents the index after the last character in the substring. Note that for variable-length encodings such as UTF-8  UTF-16 or Shift-JIS  it can be necessary to remove string positions at the end  in order to avoid invalid strings., Format, Languages, string[startpos:endpos], ALGOL 68 (changes base index), string (startpos .. endpos), Ada (changes base index), Mid(string  startpos  numChars), VB, mid(string  startpos  numChars), FreeBASIC, string[startpos+(?numChars)-~?IO], APL, MID$(string  startpos  numChars), BASIC, substr(string  startpos  numChars), AWK (changes string)  Perl 5 [14][15] PHP[14][15], substr(string  startpos  numChars) string.substr(startpos  numChars), Perl 6[16][17], substr(string  startpos « numChars  padChar»), Rexx, string[startpos:endpos], Cobra  Python [14][18] Go, string[startpos  numChars], Pick Basic, string[startpos  numChars] string[startpos .. endpos-1] string[startpos ... endpos], Ruby[14][18], string[startpos .. endpos] string[startpos len numChars], Seed7, string.slice(startpos«  endpos»), JavaScript[14][18], string.substr(startpos«  numChars»), C++ (STL)  JavaScript, string.Substring(startpos  numChars), VB .NET  C#  Windows PowerShell  F#, string.substring(startpos«  endpos»), Java  JavaScript, copy(string  startpos  numChars), Object Pascal (Delphi), (substring string startpos endpos), Scheme, (subseq string startpos endpos), Common Lisp, (subseq string startpos endpos), ISLISP, String.sub string startpos numChars, OCaml, substring (string  startpos  numChars), Standard ML, string:sub_string(string  startpos  endpos) string:substr(string  startpos  numChars), Erlang, strncpy(result  string + startpos  numChars);, C, string[startpos .. endpos+1], D, take numChars $ drop startpos string, Haskell, [string substringWithRange:NSMakeRange(startpos  numChars)], Objective-C (NSString * only), string.[startpos..endpos], F#, string.sub(string  startpos  endpos) (string):sub(startpos  endpos), Lua[14][18], string copyFrom: startpos to: endpos, Smalltalk, string(startpos:endpos), Fortran, SUBSTRING(string FROM startpos «FOR numChars»), SQL, StringTake[string  {startpos  endpos}], Mathematica[14][18], string[startpos .. endpos], Ya, string (startpos:numChars), string range string startpos endpos, Tcl, , Definition, uppercase(string) returns string, Description, Returns the string in upper case., Format, Languages, UCase(string), VB, ucase(string), FreeBASIC, toupper(string), AWK (changes string), uc(string), Perl 5 / Perl 6, string.uc, Perl 6, toupper(char), C (operates on one character), for(size_t i = 0  len = strlen(string); i< len; i++) string[i] = toupper(string[i]); for (char *c = string; *c != '\0'; c++) *c = toupper(*c);, C (string / char array), std.string.toUpper(string), D, transform(string.begin()  string.end()  result.begin()  toupper)[19], C++[20], uppercase(string), Object Pascal (Delphi), upcase(char), Object Pascal (Delphi) (operates on one character), strtoupper(string), PHP, upper(string), Seed7, tr 'a-z' 'A-Z', Unix, translate(string)  or UPPER variables  or PARSE UPPER VAR SrcVar DstVar, Rexx, string.upper(), Python, upcase(string), Pick Basic, string.upcase, Ruby [21], strings.ToUpper(string), Go, (string-upcase string), Scheme  Common Lisp, String.uppercase string, OCaml, String.map Char.toUpper string, Standard ML, map Char.toUpper string, Haskell, string.toUpperCase(), Java  JavaScript, to_upper(string), Erlang, string.ToUpper(), VB .NET  C#  Windows PowerShell  F#, string.uppercaseString, Objective-C (NSString * only)  Swift (Foundation), string.upper(string) (string):upper(), Lua, string asUppercase, Smalltalk, UPPER(string), SQL, ToUpperCase[string], Mathematica, «FUNCTION» UPPER-CASE(string), COBOL, string.toUpper, Cobra, string toupper string, Tcl, Example usage, Languages, String.Trim([chars]), C#  VB.NET  Windows PowerShell, string.strip();, D, (.trim string), Clojure, sequence [ predicate? ] trim, Factor, (string-trim '(#\Space #\Tab #\Newline) string), Common Lisp, (string-trim string), Scheme, string.trim(), Java  JavaScript (1.8.1+  Firefox 3.5+), Trim(String), Pascal [22] QBasic  Visual Basic  Delphi, string.strip(), Python, strings.Trim(string  chars), Go, LTRIM(RTRIM(String)), Oracle SQL  T-SQL, strip(string [ option  char]), REXX, string:strip(string [ option  char]), Erlang, string.strip or string.lstrip or string.rstrip, Ruby, string =~ s/^\s+//r =~ s/\s+$//r, Perl 5, string.trim, Perl 6, trim(string), PHP  Perl 6, [string stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]], Objective-C using Cocoa, string withBlanksTrimmed string withoutSpaces string withoutSeparators, Smalltalk (Squeak  Pharo) Smalltalk, strip(string), SAS, string trim $string, Tcl, TRIM(string) or TRIM(ADJUSTL(string)), Fortran, TRIM(string), SQL, TRIM(string) or LTrim(string) or RTrim(String), ColdFusion, String.trim string, OCaml 4+
 Definition, substring(string  startpos  endpos) returns string substr(string  startpos  numChars) returns string
 Description, Returns a substring of string between starting at startpos and endpos  or starting at startpos of length numChars. The resulting string is truncated if there are fewer than numChars characters beyond the starting point. endpos represents the index after the last character in the substring. Note that for variable-length encodings such as UTF-8  UTF-16 or Shift-JIS  it can be necessary to remove string positions at the end  in order to avoid invalid strings.
 Format, Languages
 string[startpos:endpos], ALGOL 68 (changes base index)
 string (startpos .. endpos), Ada (changes base index)
 Mid(string  startpos  numChars), VB
 mid(string  startpos  numChars), FreeBASIC
 string[startpos+(?numChars)-~?IO], APL
 MID$(string  startpos  numChars), BASIC
 substr(string  startpos  numChars), AWK (changes string)  Perl 5 [14][15] PHP[14][15]
 substr(string  startpos  numChars) string.substr(startpos  numChars), Perl 6[16][17]
 substr(string  startpos « numChars  padChar»), Rexx
 string[startpos:endpos], Cobra  Python [14][18] Go
 string[startpos  numChars], Pick Basic
 string[startpos  numChars] string[startpos .. endpos-1] string[startpos ... endpos], Ruby[14][18]
 string[startpos .. endpos] string[startpos len numChars], Seed7
 string.slice(startpos«  endpos»), JavaScript[14][18]
 string.substr(startpos«  numChars»), C++ (STL)  JavaScript
 string.Substring(startpos  numChars), VB .NET  C#  Windows PowerShell  F#
 string.substring(startpos«  endpos»), Java  JavaScript
 copy(string  startpos  numChars), Object Pascal (Delphi)
 (substring string startpos endpos), Scheme
 (subseq string startpos endpos), Common Lisp
 (subseq string startpos endpos), ISLISP
 String.sub string startpos numChars, OCaml
 substring (string  startpos  numChars), Standard ML
 string:sub_string(string  startpos  endpos) string:substr(string  startpos  numChars), Erlang
 strncpy(result  string + startpos  numChars);, C
 string[startpos .. endpos+1], D
 take numChars $ drop startpos string, Haskell
 [string substringWithRange:NSMakeRange(startpos  numChars)], Objective-C (NSString * only)
 string.[startpos..endpos], F#
 string.sub(string  startpos  endpos) (string):sub(startpos  endpos), Lua[14][18]
 string copyFrom: startpos to: endpos, Smalltalk
 string(startpos:endpos), Fortran
 SUBSTRING(string FROM startpos «FOR numChars»), SQL
 StringTake[string  {startpos  endpos}], Mathematica[14][18]
 string[startpos .. endpos], Ya, string (startpos:numChars)
 string range string startpos endpos, Tcl, 
 Definition, uppercase(string) returns string
 Description, Returns the string in upper case.
 Format, Languages
 UCase(string), VB
 ucase(string), FreeBASIC
 toupper(string), AWK (changes string)
 uc(string), Perl 5 / Perl 6
 string.uc, Perl 6
 toupper(char), C (operates on one character)
 for(size_t i = 0  len = strlen(string); i< len; i++) string[i] = toupper(string[i]); for (char *c = string; *c != '\0'; c++) *c = toupper(*c);, C (string / char array)
 std.string.toUpper(string), D
 transform(string.begin()  string.end()  result.begin()  toupper)[19], C++[20]
 uppercase(string), Object Pascal (Delphi)
 upcase(char), Object Pascal (Delphi) (operates on one character)
 strtoupper(string), PHP
 upper(string), Seed7
 tr 'a-z' 'A-Z', Unix
 translate(string)  or UPPER variables  or PARSE UPPER VAR SrcVar DstVar, Rexx
 string.upper(), Python
 upcase(string), Pick Basic
 string.upcase, Ruby [21]
 strings.ToUpper(string), Go
 (string-upcase string), Scheme  Common Lisp
 String.uppercase string, OCaml
 String.map Char.toUpper string, Standard ML
 map Char.toUpper string, Haskell
 string.toUpperCase(), Java  JavaScript
 to_upper(string), Erlang
 string.ToUpper(), VB .NET  C#  Windows PowerShell  F#
 string.uppercaseString, Objective-C (NSString * only)  Swift (Foundation)
 string.upper(string) (string):upper(), Lua
 string asUppercase, Smalltalk
 UPPER(string), SQL
 ToUpperCase[string], Mathematica
 «FUNCTION» UPPER-CASE(string), COBOL
 string.toUpper, Cobra
 string toupper string, Tcl
 Example usage, Languages
 String.Trim([chars]), C#  VB.NET  Windows PowerShell
 string.strip();, D
 (.trim string), Clojure
 sequence [ predicate? ] trim, Factor
 (string-trim '(#\Space #\Tab #\Newline) string), Common Lisp
 (string-trim string), Scheme
 string.trim(), Java  JavaScript (1.8.1+  Firefox 3.5+)
 Trim(String), Pascal [22] QBasic  Visual Basic  Delphi
 string.strip(), Python
 strings.Trim(string  chars), Go
 LTRIM(RTRIM(String)), Oracle SQL  T-SQL
 strip(string [ option  char]), REXX
 string:strip(string [ option  char]), Erlang
 string.strip or string.lstrip or string.rstrip, Ruby
 string =~ s/^\s+//r =~ s/\s+$//r, Perl 5
 string.trim, Perl 6
 trim(string), PHP  Perl 6
 [string stringByTrimmingCharactersInSet:[NSCharacterSet 